import React, { Suspense } from 'react';
import { Canvas } from '@react-three/fiber';
import { OrbitControls, useGLTF, Environment, ContactShadows } from '@react-three/drei';
import treemodel from '../assets/oak_tree.glb';

function Tree() {
  const { scene } = useGLTF(treemodel);
  return <primitive object={scene} scale={0.4} position={[0, -1.5, 0]} />;
}

export default function TreeModel() {
  return (
    <div className="w-240 mt-16 ml-68 h-[400px] bg-green-100 rounded-xl shadow-lg overflow-hidden">
      <Canvas
        camera={{ position: [4, 2, 5], fov: 45 }}
        shadows
      >
        {/* Ambient and directional lights */}
        <ambientLight intensity={0.6} />
        <directionalLight
          position={[10, 10, 5]}
          intensity={1}
          castShadow
          shadow-mapSize-width={1024}
          shadow-mapSize-height={1024}
        />

        {/* 3D Model */}
        <Suspense fallback={null}>
          <Tree />
          {/* Adds soft environment light and reflections */}
          <Environment preset="forest" background />
          {/* Soft shadow under the model */}
          <ContactShadows position={[0, -1.5, 0]} opacity={0.4} blur={1.5} scale={10} />
        </Suspense>

        {/* Orbit controls to rotate */}
        <OrbitControls enableZoom={true} />
      </Canvas>
    </div>
  );
}








import React from 'react';
import { motion } from 'framer-motion';
import Lottie1 from './lottie1';
import treeVideo from '../assets/tree.mp4'; 
import { useNavigate } from 'react-router-dom';


function PlantTree() {
  const navigate = useNavigate();
  return (
    <div className="bg-green-50 py-12 mb-16 ">
      <div className="max-w-screen-xl mx-auto px-6 flex flex-col md:flex-row items-center gap-10">

        {/* Left Side - Text Content */}
        <motion.div
          className="md:w-1/2"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <h2 className="text-4xl font-bold text-green-800 mb-4">Plant a Tree, Grow a Future</h2>
          <p className="text-gray-700 text-lg mb-6">
            Trees are the lungs of our planet. By planting trees, we reduce carbon, improve air quality, and make the Earth a better place for future generations.
          </p>
          <button className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition mr-16"
           onClick={()=> navigate('/submission/upload')}
          >
            Get Involved
          </button>

          <button className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition"
           onClick={()=> navigate('/leaderboard')}
          >
            Leaderboard
          </button>
        </motion.div>

        {/* Right Side - Animation */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <video
            src={treeVideo}
            autoPlay
            loop
            muted
            playsInline
            className="w-full max-w-md rounded-xl shadow-lg object-cover"
          />
        </motion.div>


      </div>
    </div>
  );
}

export default PlantTree;







import React from 'react';
import { motion } from 'framer-motion';
import Lottie1 from './lottie1';
import treeVideo from '../assets/tree.mp4'; 
import { useNavigate } from 'react-router-dom';


function PlantTree() {
  const navigate = useNavigate();
  return (
    <div className="bg-green-50 py-12 mb-16 ">
      <div className="max-w-screen-xl mx-auto px-6 flex flex-col md:flex-row items-center gap-10">

        {/* Left Side - Text Content */}
        <motion.div
          className="md:w-1/2"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <h2 className="text-4xl font-bold text-green-800 mb-4">Plant a Tree, Grow a Future</h2>
          <p className="text-gray-700 text-lg mb-6">
            Trees are the lungs of our planet. By planting trees, we reduce carbon, improve air quality, and make the Earth a better place for future generations.
          </p>
          <button className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition mr-16"
           onClick={()=> navigate('/submission/upload')}
          >
            Get Involved
          </button>

          <button className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition"
           onClick={()=> navigate('/leaderboard')}
          >
            Leaderboard
          </button>
        </motion.div>

        {/* Right Side - Animation */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <video
            src={treeVideo}
            autoPlay
            loop
            muted
            playsInline
            className="w-full max-w-md rounded-xl shadow-lg object-cover"
          />
        </motion.div>


      </div>
    </div>
  );
}

export default PlantTree;








import React, { useState } from 'react';
import CountUp from 'react-countup';

const initialStats = [
  { label: 'Trees Planted', value: 12500 },
  { label: 'CO‚ÇÇ Reduced (kg)', value: 430000 },
  { label: 'Volunteers Joined', value: 3400 },
  { label: 'Projects Completed', value: 85 },
];

export default function ImpactStats() {
  const [stats, setStats] = useState(initialStats);

  const handleIncrement = (index) => {
    const newStats = [...stats];
    newStats[index].value += 1;
    setStats(newStats);
  };

  return (
    <div className="bg-green-50 py-12">
      <div className="max-w-6xl mx-auto px-6 text-center">
        <h2 className="text-4xl font-bold text-green-800 mb-10">Our Impact</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-8">
          {stats.map((stat, index) => (
            <div
              key={index}
              className="bg-white rounded-xl shadow-md p-6 hover:shadow-xl transition flex flex-col items-center"
            >
              <h3 className="text-3xl font-bold text-green-700 mb-2">
                <CountUp end={stat.value} duration={0.8} separator="," />
              </h3>
              <p className="text-gray-600 mb-4">{stat.label}</p>
              <button
                onClick={() => handleIncrement(index)}
                className="text-white bg-green-600 hover:bg-green-700 px-4 py-1 rounded-full text-sm transition"
              >
                + Add
              </button>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}







import React from 'react';

function plantinfoCard({ name, image }) {
  return (
    <div className="plant-card bg-gradient-to-r from-green-400 to-teal-500 p-6 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105">
      <div className="relative">
        <img
          src={image}
          alt={name}
          className="w-full h-48 object-cover rounded-lg mb-4"
          />
      </div>
      <h3 className="text-2xl font-bold text-white text-center">{name}</h3>
      <p className="text-center text-white opacity-75 mt-2">Discover the beauty of nature</p>
    </div>
    
  );
}

export default plantinfoCard;







import React from 'react';

function plantinfoCard({ name, image }) {
  return (
    <div className="plant-card p-6 rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 transform hover:scale-105">
      <div className="relative">
        <img
          src={image}
          alt={name}
          className="w-full h-48 object-cover rounded-lg mb-4"
          />
      </div>
      <h3 className="text-2xl font-bold text-white text-center">{name}</h3>
      <p className="text-center text-white opacity-75 mt-2">Discover the beauty of nature</p>
    </div>
    
  );
}

export default plantinfoCard;







// src/components/News.jsx
import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchEnvironmentNews, searchNews, selectFilteredNews, selectLoading, selectError } from '../../slices/news'; // Update the path if needed
import NavBar from '../NavBar';
import Footer from '../Footer';
import { Link } from 'react-router-dom'; // Add this at the top


const News = () => {
  const dispatch = useDispatch();
  const news = useSelector(selectFilteredNews);
  const loading = useSelector(selectLoading);
  const error = useSelector(selectError);

  useEffect(() => {
    dispatch(fetchEnvironmentNews());
  }, [dispatch]);

  const handleSearch = (event) => {
    dispatch(searchNews(event.target.value));
  };

  if (loading) return <p className="text-center mt-20 text-xl font-semibold animate-pulse">Loading...</p>;
  if (error) return <p className="text-center mt-20 text-red-600 text-lg font-semibold">Error: {error}</p>;

  return (
    <>
      <NavBar />
      <div className="max-w-7xl mx-auto px-6 py-12">
        <h2 className="text-4xl font-extrabold mb-10 text-center text-green-700">üåç Latest Environment News</h2>

        <div className="flex justify-center mb-12">
          <input
            type="text"
            placeholder="Search for news articles..."
            onChange={handleSearch}
            className="w-full max-w-2xl px-5 py-3 border border-gray-300 rounded-full shadow-md focus:outline-none focus:ring-4 focus:ring-green-400 text-lg"
          />
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10">
          {news.map((article) => (
            <div
              key={article.id}
              className="bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 relative group"
            >
              {article.imageUrl && (
                <div className="relative">
                  <img
                    src={article.imageUrl}
                    alt={article.title}
                    className="w-full h-56 object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                  <div className="absolute inset-0 bg-gradient-to-t from-black via-transparent opacity-60 group-hover:opacity-40 transition duration-300"></div>
                </div>
              )}
              <div className="p-6">
                <a href={article.url} target="_blank" rel="noopener noreferrer">
                <h3 className="text-2xl font-bold text-gray-800 mb-3 group-hover:text-green-600 transition-colors duration-300">
                  {article.title.length > 80 ? article.title.substring(0, 80) + '...' : article.title}
                </h3>
              </a>
                <p className="text-gray-600 text-sm mb-6 line-clamp-3">
                  {article.description ? (article.description.length > 120 ? article.description.substring(0, 120) + '...' : article.description) : 'No description available.'}
                </p>
                <p className="text-gray-400 text-xs">{new Date(article.publishedAt).toLocaleDateString()}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
      <Footer />
    </>
  );
};

export default News;







import React from 'react';
import { motion } from 'framer-motion';
import Lottie6 from './Lottie6';
import { useNavigate } from 'react-router-dom';
import { useSelector } from 'react-redux';

function MoveToList() {
  const navigate = useNavigate();
  const token = useSelector((state) => state.auth.token);

  return (
    <div className="bg-green-50 py-20 px-4 mb-16">
      <div className="max-w-screen-xl mx-auto flex flex-col md:flex-row items-center gap-12">
        
        {/* Left Side - Lottie Animation */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <Lottie6 />
        </motion.div>

        {/* Right Side - Text Content */}
        <motion.div
          className="md:w-1/2"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <h2 className="text-4xl md:text-5xl font-bold text-green-800 mb-6">
            Discover Items Ready for a Second Home
          </h2>
          <p className="text-gray-700 text-lg md:text-xl mb-8 leading-relaxed">
            Looking for quality pre-loved items? Support sustainability and save money by purchasing from our growing community. Let reuse be your first choice.
          </p>
          <button
            className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition shadow-md"
            onClick={() => {
              if(token){
                navigate('/item/listings');
              }else{
                navigate('/auth/login');
              }
            }}
          >
            Browse Listings
          </button>
        </motion.div>
      </div>
    </div>
  );
}

export default MoveToList;







import React from 'react';
import { motion } from 'framer-motion';
import Lottie5 from './Lottie5';
import { useNavigate } from 'react-router-dom';
import { useSelector } from 'react-redux';

function AddItem() {
  const navigate = useNavigate();
  const token = useSelector((state) => state.auth.token);

  return (
    <div className="bg-green-50 py-20 px-4 mb-16">
      <div className="max-w-screen-xl mx-auto flex flex-col md:flex-row items-center gap-16">
        
        {/* Left Side - Text with scroll animation */}
        <motion.div
          className="md:w-1/2"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <h2 className="text-4xl md:text-5xl font-extrabold text-green-800 mb-6 leading-tight">
            Give Items a Second Life
          </h2>
          <p className="text-gray-700 text-lg md:text-xl mb-8 leading-relaxed">
            Turn your unused items into something valuable. Promote reusability and help reduce waste ‚Äî while earning from things you no longer need.
          </p>
          <button
            onClick={() => {
              token ? navigate('/item/create') : navigate('/auth/login');
            }}
            className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition shadow-lg"
          >
            Start Selling
          </button>
        </motion.div>

        {/* Right Side - Lottie with scroll animation */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <Lottie5 />
        </motion.div>
      </div>
    </div>
  );
}

export default AddItem;








import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from "react-router-dom";
import { useSelector } from 'react-redux';

const blogSamples = [
  {
    title: "Why We Need More Trees",
    content:
      "Trees aren‚Äôt just green friends; they cool the planet, purify the air, and offer shelter to wildlife. Planting one today can shape the climate of tomorrow. Let‚Äôs make our cities greener and our lives cleaner.",
    author: "Jane Forest",
    date: "May 10, 2025",
  },
  {
    title: "The Joy of Gardening",
    content:
      "Gardening connects us with nature. Whether it's a balcony herb pot or a backyard vegetable patch, the process is therapeutic, educational, and fun for all ages. Discover the magic of growing your own greens.",
    author: "Liam Earthwise",
    date: "May 6, 2025",
  },
  {
    title: "Urban Forests Matter",
    content:
      "City trees improve mental health, reduce heat islands, and bring communities together. Supporting urban forestry is crucial for a livable future in our growing metropolises.",
    author: "Ava Greenfield",
    date: "April 30, 2025",
  },
];

function AddBlogList() {
  const navigate = useNavigate();
  const { token } = useSelector((state) => state.auth);
  const [index, setIndex] = useState(0);

  useEffect(() => {
    const timer = setInterval(() => {
      setIndex((prev) => (prev + 1) % blogSamples.length);
    }, 5000);
    return () => clearInterval(timer);
  }, []);

  const currentBlog = blogSamples[index];

  return (
    <div className="bg-green-50 py-16 mb-16">
      <div className="max-w-screen-xl mx-auto px-6 flex flex-col md:flex-row items-center justify-between gap-12">

        {/* Left Side - Blog Preview Card */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <motion.div
            key={index}
            className="bg-white rounded-2xl shadow-2xl p-8 w-full max-w-md h-72 border-l-4 border-green-700 transition-all duration-500"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
          >
            <h3 className="text-green-800 font-bold text-xl mb-2">{currentBlog.title}</h3>
            <p className="text-gray-700 text-sm mb-4 line-clamp-4">{currentBlog.content}</p>
            <div className="text-gray-500 text-xs italic">
              By {currentBlog.author} ‚Ä¢ {currentBlog.date}
            </div>
          </motion.div>
        </motion.div>

        {/* Right Side - Heading and Action Buttons */}
        <motion.div
          className="md:w-1/2 space-y-6 text-center md:text-left"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <h2 className="text-4xl font-bold text-green-800 leading-snug">
            Every Tree Counts. <br className="hidden md:block" />
            Every Story Inspires.
          </h2>
          <p className="text-gray-700 text-lg">
            Be part of a movement to green our Earth. Learn from others and share your eco-friendly actions. Your story could inspire the next great change.
          </p>

          <div className="flex flex-col sm:flex-row gap-4 justify-center md:justify-start">
            <button
              className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition font-semibold"
              onClick={() => navigate('/blog')}
            >
              Read Inspiring Stories
            </button>
            <button
              className="px-6 py-3 border border-green-700 text-green-700 rounded-xl hover:bg-green-100 transition font-semibold"
              onClick={() => token ? navigate('/blog/create') : navigate('/auth/login')}
            >
              Share Your Green Journey
            </button>
          </div>
        </motion.div>
      </div>
    </div>
  );
}

export default AddBlogList;







import React from 'react';
import { motion } from 'framer-motion';
import Lottie2 from './lottie2';
import { useNavigate } from 'react-router-dom';
import { useSelector } from 'react-redux';

function Add() {
  const { token } = useSelector(state => state.auth);
  const navigate = useNavigate();

  return (
    <div className="bg-green-50 py-16 px-4">
      <div className="max-w-screen-xl mx-auto flex flex-col md:flex-row items-center gap-14">

        {/* Left Side - Text Content */}
        <motion.div
          className="md:w-1/2 flex justify-center text-center md:text-left"
          initial={{ x: -100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <div>
            <h2 className="text-4xl md:text-5xl font-bold text-green-800 mb-6">
              AI: Your Partner in Sustainability
            </h2>
            <p className="text-gray-700 text-lg md:text-xl mb-8 leading-relaxed">
              AI can analyze big data, forecast environmental trends, optimize resources, and uncover new ways to cut emissions. Use technology to empower your green mission.
            </p>
            <button
              className="px-6 py-3 bg-green-700 text-white rounded-xl hover:bg-green-800 transition-shadow shadow-lg"
              onClick={() => {
                if (token) {
                  navigate("/ai");
                } else {
                  navigate("/auth/login");
                }
              }}
            >
              Get AI Assistance
            </button>
          </div>
        </motion.div>

        {/* Right Side - Lottie Animation */}
        <motion.div
          className="md:w-1/2 flex justify-center"
          initial={{ x: 100, opacity: 0 }}
          whileInView={{ x: 0, opacity: 1 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true, amount: 0.3 }}
        >
          <Lottie2 />
        </motion.div>

      </div>
    </div>
  );
}

export default Add;







import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { loginUser } from '../../slices/authSlice';
import Lottie3 from './lottie3';
import NavBar from '../NavBar';
import Footer from '../Footer';
function Login() {
  const navigate = useNavigate();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const { loading, error } = useSelector(state => state.auth);
  const dispatch = useDispatch();

  const handleLogin = async (e) => {
    e.preventDefault();
    const result = await dispatch(loginUser({ email, password }));
    if (result.success) {
      navigate('/');
    }
  };

  return (
    <>
    
    <div className="flex h-screen ">
      {/* Left: Animation */}
      <div className="w-1/2 flex justify-center items-center p-10">
        <Lottie3 loop={true} className="w-full max-w-md" />
      </div>

      {/* Right: Login Form */}
      <div className="w-1/2 flex justify-center items-center">
        <form
          onSubmit={handleLogin}
          className="bg-white p-10 rounded-2xl shadow-lg w-full max-w-md"
        >
          <h2 className="text-3xl font-semibold text-green-800 text-center mb-6">
            Welcome Back üåø
          </h2>
          {error && (
            <p className="text-red-500 text-sm text-center mb-4">{error}</p>
          )}
          <input
            className="w-full p-3 mb-4 border border-green-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400"
            type="email"
            placeholder="Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            className="w-full p-3 mb-6 border border-green-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400"
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button
            className="w-full bg-green-600 hover:bg-green-700 text-white font-medium p-3 rounded-lg transition duration-200"
            type="submit"
            disabled={loading}
          >
            {loading ? 'Logging in...' : 'Login'}
          </button>
        </form>
      </div>
    </div>
    
    </>
  );
}

export default Login;






import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { registerUser } from '../../slices/authSlice';
import Lottie4 from './Lottie4';


function Register() {
  const navigate = useNavigate();
  const [form, setForm] = useState({ username: '', email: '', password: '' });
  const { loading, error } = useSelector(state => state.auth);
  const dispatch = useDispatch();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleRegister = (e) => {
    e.preventDefault();
    dispatch(registerUser(form));
    navigate('/');
  };

  return (
    <>
   
      <div className="flex h-screen ">
        {/* Left: Animation */}
        <div className="w-1/2 flex justify-center items-center p-10">
          <Lottie4 className="w-full max-w-md" />
        </div>

        {/* Right: Register Form */}
        <div className="w-1/2 flex justify-center items-center">
          <form
            onSubmit={handleRegister}
            className="bg-white p-10 rounded-2xl shadow-lg w-full max-w-md"
          >
            <h2 className="text-3xl font-semibold text-green-800 text-center mb-6">
              Create Account üå±
            </h2>
            {error && (
              <p className="text-red-500 text-sm text-center mb-4">{error}</p>
            )}
            <input
              name="username"
              className="w-full p-3 mb-4 border border-green-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400"
              placeholder="Username"
              onChange={handleChange}
            />
            <input
              name="email"
              type="email"
              className="w-full p-3 mb-4 border border-green-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400"
              placeholder="Email"
              onChange={handleChange}
            />
            <input
              name="password"
              type="password"
              className="w-full p-3 mb-6 border border-green-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400"
              placeholder="Password"
              onChange={handleChange}
            />
            <button
              className="w-full bg-green-600 hover:bg-green-700 text-white font-medium p-3 rounded-lg transition duration-200"
              type="submit"
              disabled={loading}
            >
              {loading ? 'Registering...' : 'Register'}
            </button>
          </form>
        </div>
      </div>
      
    </>
  );
}

export default Register;









import { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { fetchAllSubmissions, deleteSubmission } from '../../slices/submissionSlice';
import { toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

export default function Leaderboard() {
    const dispatch = useDispatch();
    const { submissions, loading } = useSelector(state => state.submission);
    const [selectedUser, setSelectedUser] = useState(null);

    useEffect(() => {
        dispatch(fetchAllSubmissions());
    }, [dispatch]);

    const grouped = (submissions || []).reduce((acc, s) => {
        const name = s.name;
        const cleanName = name.replace(/["']/g, '').replace(/\s+/g, ' ').trim();
        acc[cleanName] = acc[cleanName] || [];
        acc[cleanName].push(s);
        return acc;
    }, {});

    const sorted = Object.entries(grouped).sort((a, b) => b[1].length - a[1].length).slice(0, 5);

    return (
        <div className="mt-16 px-4">
            <div className="p-8 bg-green-50 rounded-2xl shadow-lg max-w-6xl mx-auto">
                <h2 className="text-3xl font-bold mb-6 text-center">üèÜ Leaderboard</h2>
                {loading && <p className="text-center">Loading...</p>}
                <div className="space-y-4">
                    {sorted.map(([user, entries], idx) => (
                        <div key={user} className="border-b pb-4 flex justify-between items-center">
                            <div>
                                <p className="text-lg font-semibold">{idx + 1}. {user}</p>
                                <p className="text-green-600">{entries.length} Mint Coins</p>
                            </div>
                            <div className="space-x-4">
                                <button
                                    onClick={() => setSelectedUser(user)}
                                    className="text-blue-600 hover:underline font-medium"
                                >
                                    See All
                                </button>
                                <button
                                    onClick={() => {
                                        if (entries.length >= 5) {
                                            const link = document.createElement('a');
                                            link.href = 'https://png.pngtree.com/template/20210303/ourlarge/pngtree-white-simple-watercolor-plant-style-certificate-image_493719.jpg'; 
                                            link.download = 'GreenTokenReward.png';
                                            document.body.appendChild(link);
                                            link.click();
                                            document.body.removeChild(link);
                                            toast.success(`${user} received the reward! üå±`);
                                        } else {
                                            toast.info(`${user} needs at least 5 Mint Coins to claim the reward.`);
                                        }
                                    }}
                                    className="text-yellow-600 font-medium"
                                >
                                    üéÅ Reward
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {selectedUser && (
                <div className="mt-16 p-6 bg-white rounded-2xl shadow-md max-w-4xl mx-auto">
                    <h3 className="text-2xl font-bold mb-4 text-center">
                        Submissions by {selectedUser}
                    </h3>
                    <div className="grid sm:grid-cols-2 gap-4">
                        {(grouped[selectedUser] || []).map((sub) => (
                            <div
                                key={sub._id}
                                className="flex items-center justify-between bg-gray-100 p-4 rounded-lg shadow"
                            >
                                <img
                                    src={`${sub.imageUrl}`}
                                    alt="tree"
                                    className="w-24 h-24 object-cover rounded"
                                />
                                <button
                                    onClick={() => dispatch(deleteSubmission(sub._id))}
                                    className="text-red-600 hover:underline ml-4"
                                >
                                    Delete
                                </button>
                            </div>
                        ))}
                    </div>
                    <div className="text-center mt-6">
                        <button
                            onClick={() => setSelectedUser(null)}
                            className="text-gray-600 underline text-sm"
                        >
                            Close
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
}






import React, { useState } from "react";

import {
  BookCopy,
  Bot,
  ImageUp,
  MapPinned,
  LogOutIcon,
  LogInIcon,
  ScanLine,
  FileText,
  MoreVertical,
  Menu,
  Logs,
  PencilLine,
  ShoppingCart,
  Tag
} from "lucide-react"; // Import the 'Menu' icon for sidebar
import { FaRegistered } from "react-icons/fa";
import { Button } from "./Button";
import { useNavigate } from "react-router-dom";
import { useDispatch, useSelector } from "react-redux";
import { logout } from "../slices/authSlice";

function NavBar() {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { token } = useSelector((state) => state.auth);
  const [dropdownOpen, setDropdownOpen] = useState(false);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [sidebarOpen, setSidebarOpen] = useState(false); // State for sidebar visibility

  const toggleDropdown = () => {
    setDropdownOpen(!dropdownOpen);
  };

  const toggleMobileMenu = () => {
    setMobileMenuOpen(!mobileMenuOpen);
  };

  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen); // Toggle sidebar state
  };

  return (
    <nav style={navStyle} className="flex items-center justify-between px-4 py-4 bg-white text-green-500 shadow-lg relative ">
      {/* Left - Sidebar Toggle and Logo */}
      <div className="flex items-center space-x-4">
        {/* Sidebar Toggle Icon */}
        <button
          onClick={toggleSidebar}
          className="text-green-700 focus:outline-none"
        >
          <Menu className="h-6 w-6" /> {/* Menu icon to toggle sidebar */}
        </button>

        {/* Logo */}
        <a href="/" className="flex items-center space-x-2">
          <img
            src="https://static.vecteezy.com/system/resources/thumbnails/041/322/814/small/ai-generated-group-of-small-green-plants-growing-in-dirt-free-photo.jpeg"
            alt="Logo"
            className="h-14 w-14 rounded-full p-2"
          />
          <span className="text-3xl font-bold tracking-wider italic">
            Green
          </span>
        </a>


      </div>



      {/* Right - Nav */}
      <div className="hidden md:flex items-center space-x-6">
        <Button
          className="hover:text-green-700 flex items-center space-x-2"
          onClick={() => window.location.href = "https://pgportal.gov.in/"}
        >
          <FileText className="h-5 w-5" />
          <span>Report</span>
        </Button>

        {token && (
          <>
            <Button
              className="hover:text-green-700 flex items-center space-x-2"
              onClick={() => window.location.href = "https://www.plant.id/"}
            >
              <ScanLine className="h-5 w-5" />
              <span>Scan</span>
            </Button>

            <Button
              className="hover:text-green-700 flex items-center space-x-2"
              onClick={() => window.location.href = "https://identify.plantnet.org/"}
            >
              <MapPinned className="h-5 w-5" />
              <span>Track</span>
            </Button>

            <Button
              className="hover:text-green-700 flex items-center space-x-2"
              onClick={() => window.location.href = "https://www.plant.id/"}
            >
              <ImageUp className="h-5 w-5" />
              <span>Upload</span>
            </Button>
          </>
        )}

        <Button
          className="hover:text-green-700 flex items-center space-x-2"
          onClick={() => window.location.href = ""}
        >
          <BookCopy className="h-5 w-5" />
          <span>About</span>
        </Button>

        {token && (
          <Button
            className="hover:text-green-700 flex items-center space-x-2"
            onClick={() => navigate("/ai")}
          >
            <Bot className="h-5 w-5" />
            <span>AI</span>
          </Button>
        )}

        {!token && (
          <>
            <Button
              className="hover:text-green-700 flex items-center space-x-2"
              onClick={() => navigate("/auth/login")}
            >
              <LogInIcon className="h-5 w-5" />
              <span>Login</span>
            </Button>

            <Button
              className="hover:text-green-700 flex items-center space-x-2"
              onClick={() => navigate("/auth/register")}
            >
              <FaRegistered className="h-5 w-5" />
              <span>Register</span>
            </Button>
          </>
        )}

        {token && (
          <Button
            className="hover:text-green-700 flex items-center space-x-2"
            onClick={() => dispatch(logout())}
          >
            <LogOutIcon className="h-5 w-5" />
            <span>Logout</span>
          </Button>
        )}

        <div className="relative">
          <Button
            className="hover:text-green-700 p-0 m-0"
            onClick={toggleDropdown}
          >
            <MoreVertical className="h-5 w-5" />
          </Button>

          {dropdownOpen && (
            <div className="absolute right-0 mt-3 w-48 bg-white text-green-700 rounded-lg shadow-lg z-50">
              <div
                onClick={() => alert("Settings")}
                className="px-4 py-2 hover:bg-green-100 cursor-pointer rounded-t-lg"
              >
                Settings
              </div>
              <div
                onClick={() => alert("Help")}
                className="px-4 py-2 hover:bg-green-100 cursor-pointer"
              >
                Help
              </div>
              <div
                onClick={() => alert("About")}
                className="px-4 py-2 hover:bg-green-100 cursor-pointer rounded-b-lg"
              >
                About
              </div>
            </div>
          )}
        </div>
      </div>







      {/* Mobile dropdown */}
      {mobileMenuOpen && (
        <div className="absolute top-16 right-0 w-48 bg-white text-green-700 rounded-lg shadow-lg z-50 md:hidden">
          <div onClick={() => window.location.href = 'https://pgportal.gov.in/'} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Report</div>
          {token && <div onClick={() => window.location.href = 'https://www.plant.id/'} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Scan</div>}
          {token && <div onClick={() => window.location.href = 'https://identify.plantnet.org/'} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Track</div>}
          {token && <div onClick={() => window.location.href = 'https://www.plant.id/'} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Upload</div>}
          <div onClick={() => window.location.href = ''} className="px-4 py-2 hover:bg-green-100 cursor-pointer">About</div>
          {token && <div onClick={() => navigate('/ai')} className="px-4 py-2 hover:bg-green-100 cursor-pointer">AI</div>}
          {!token && <div onClick={() => navigate('/auth/login')} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Login</div>}
          {!token && <div onClick={() => navigate('/auth/register')} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Register</div>}
          {token && <div onClick={() => dispatch(logout())} className="px-4 py-2 hover:bg-green-100 cursor-pointer">Logout</div>}
        </div>
      )}
















      {/* Sidebar (Mobile or Desktop) */}
{sidebarOpen && (
  <div className="fixed inset-0 z-40">
     <div className="fixed left-0 top-0 w-64 bg-white h-full p-2 shadow-lg z-50 text-gray-900 overflow-y">
      {/* Close Button */}
      <button
        onClick={toggleSidebar}
        className="absolute top-6 right-6 text-gray-900 text-2xl hover:text-green-500"
      >
        &times; {/* Close icon using HTML entity */}
      </button>

      {/* Sidebar Content */}
      <div className="space-y-6 mt-12">
        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => window.location.href = 'https://pgportal.gov.in/'}
        >
          <FileText className="h-5 w-5 text-green-500" />
          <span>Report</span>
        </div>

        {token && (
          <>
            <div
              className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
              onClick={() => window.location.href = 'https://www.plant.id/'}
            >
              <ScanLine className="h-5 w-5 text-green-500" />
              <span>Scan</span>
            </div>

            <div
              className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
              onClick={() => window.location.href = 'https://identify.plantnet.org/'}
            >
              <MapPinned className="h-5 w-5 text-green-500" />
              <span>Track</span>
            </div>

            <div
              className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
              onClick={() => window.location.href = 'https://www.plant.id/'}
            >
              <ImageUp className="h-5 w-5 text-green-500" />
              <span>Upload</span>
            </div>
          </>
        )}

        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => window.location.href = ''}
        >
          <BookCopy className="h-5 w-5 text-green-500" />
          <span>About</span>
        </div>

        {/* New Blog and Selling Buttons */}
        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => navigate('/blogs')}
        >
          <Logs className="h-5 w-5 text-green-500" />
          <span>Blogs</span>
        </div>

        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => navigate('/create-blog')}
        >
          <PencilLine className="h-5 w-5 text-green-500" />
          <span>Create Blog</span>
        </div>

        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => navigate('/put-item-for-sale')}
        >
          <Tag className="h-5 w-5 text-green-500" />
          <span>Put Item for Sale</span>
        </div>

        <div
          className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
          onClick={() => navigate('/sell-items-list')}
        >
          <ShoppingCart className="h-5 w-5 text-green-500" />
          <span>Sell List of Items</span>
        </div>

        {token && (
          <div
            className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
            onClick={() => navigate('/ai')}
          >
            <Bot className="h-5 w-5 text-green-500" />
            <span>AI</span>
          </div>
        )}

        {!token && (
          <>
            <div
              className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
              onClick={() => navigate('/auth/login')}
            >
              <LogInIcon className="h-5 w-5 text-green-500" />
              <span>Login</span>
            </div>

            <div
              className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
              onClick={() => navigate('/auth/register')}
            >
              <FaRegistered className="h-5 w-5 text-green-500" />
              <span>Register</span>
            </div>
          </>
        )}

        {token && (
          <div
            className="cursor-pointer flex items-center space-x-2 hover:bg-green-100 p-3 rounded-lg transition-colors"
            onClick={() => dispatch(logout())}
          >
            <LogOutIcon className="h-5 w-5 text-green-500" />
            <span>Logout</span>
          </div>
        )}
      </div>
    </div>
  </div>
)}















    </nav>
  );
}


const navStyle = {
  position: 'fixed',
  top: 0,
  left: 0,
  width: '100%',
  backgroundColor: 'rgba(255, 255, 255, 0)',
  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',
  zIndex: 10,
};


export default NavBar;




